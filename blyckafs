local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25)local v26={};for v42=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v42,v42 + 1 )),v1(v2(v25,1 + (v42% #v25) ,1 + (v42% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function()return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...)local v29=0;local v30;local v31;local v32;local v33;local v34;local v35;local v36;local v37;local v38;local v39;local v40;local v41;while true do if (v29==3) then function v36()local v43=0;local v44;local v45;local v46;local v47;local v48;local v49;while true do if (v43==3) then if (v48==0) then if (v47==(0 -0)) then return v49 * 0 ;else local v119=0;while true do if (v119==0) then v48=1;v46=0;break;end end end elseif (v48==(2666 -(555 + 64))) then return ((v47==0) and (v49 * (1/0))) or (v49 * NaN) ;end return v16(v49,v48-1023 ) * (v46 + (v47/(2^52))) ;end if (v43==0) then v44=v35();v45=v35();v43=1;end if (v43==2) then v48=v32(v45,21,31);v49=((v32(v45,32)==1) and  -1) or 1 ;v43=3;end if (v43==1) then v46=1 -0 ;v47=(v32(v45,1,20) * (2^32)) + v44 ;v43=2;end end end v37=nil;function v37(v50)local v51=0;local v52;local v53;while true do if (v51==1) then v52=v11(v27,v30,(v30 + v50) -1 );v30=v30 + v50 ;v51=2;end if (v51==0) then v52=nil;if  not v50 then v50=v35();if (v50==0) then return "";end end v51=1;end if (v51==3) then return v14(v53);end if (v51==2) then v53={};for v102=1, #v52 do v53[v102]=v10(v9(v11(v52,v102,v102)));end v51=3;end end end v38=v35;v29=4;end if (v29==2) then function v34()local v54=0;local v55;local v56;while true do if (v54==1) then return (v56 * 256) + v55 ;end if (v54==0) then v55,v56=v9(v27,v30,v30 + 2 );v30=v30 + 2 ;v54=1;end end end v35=nil;function v35()local v57=0;local v58;local v59;local v60;local v61;while true do if (1==v57) then return (v61 * 16777216) + (v60 * 65536) + (v59 * 256) + v58 ;end if (v57==0) then v58,v59,v60,v61=v9(v27,v30,v30 + 3 );v30=v30 + 4 ;v57=1;end end end v36=nil;v29=3;end if (v29==1) then function v32(v62,v63,v64)if v64 then local v94=(v62/(2^(v63-(2 -1))))%(2^(((v64-1) -(v63-1)) + 1)) ;return v94-(v94%1) ;else local v95=2^(v63-1) ;return (((v62%(v95 + v95))>=v95) and 1) or 0 ;end end v33=nil;function v33()local v65=v9(v27,v30,v30);v30=v30 + (2 -1) ;return v65;end v34=nil;v29=2;end if (v29==0) then v30=1;v31=nil;v27=v12(v11(v27,5),v7("\116\240","\102\90\222\105\204"),function(v66)if (v9(v66,2)==79) then local v96=0;while true do if (v96==0) then v31=v8(v11(v66,1,1));return "";end end else local v97=0;local v98;while true do if (0==v97) then v98=v10(v8(v66,16));if v31 then local v120=v13(v98,v31);v31=nil;return v120;else return v98;end break;end end end end);v32=nil;v29=1;end if (4==v29) then v39=nil;function v39(...)return {...},v20("#",...);end v40=nil;function v40()local v67=0;local v68;local v69;local v70;local v71;local v72;local v73;while true do if (v67==1) then v71={v68,v69,nil,v70};v72=v35();v73={};v67=2;end if (v67==0) then v68={};v69={};v70={};v67=1;end if (v67==3) then for v104=1,v35() do v69[v104-1 ]=v40();end return v71;end if (2==v67) then for v106=1,v72 do local v107=v33();local v108;if (v107==(569 -(367 + 201))) then v108=v33()~=0 ;elseif (v107==2) then v108=v36();elseif (v107==3) then v108=v37();end v73[v106]=v108;end v71[3]=v33();for v110=928 -(214 + 713) ,v35() do local v111=0;local v112;while true do if (v111==0) then v112=v33();if (v32(v112,1,1)==0) then local v121=0;local v122;local v123;local v124;while true do if (v121==0) then v122=v32(v112,2,1 + 2 );v123=v32(v112,4,6);v121=1;end if (v121==1) then v124={v34(),v34(),nil,nil};if (v122==0) then v124[3]=v34();v124[4]=v34();elseif (v122==1) then v124[3]=v35();elseif (v122==2) then v124[3]=v35() -((1639 -(1523 + 114))^16) ;elseif (v122==3) then local v317=0;while true do if (0==v317) then v124[3]=v35() -(2^16) ;v124[4]=v34();break;end end end v121=2;end if (v121==3) then if (v32(v123,3,3)==1) then v124[4]=v73[v124[1069 -(68 + 997) ]];end v68[v110]=v124;break;end if (2==v121) then if (v32(v123,1,1)==1) then v124[2]=v73[v124[2]];end if (v32(v123,2 + 0 ,2)==1) then v124[3 -0 ]=v73[v124[3]];end v121=3;end end end break;end end end v67=3;end end end v29=5;end if (v29==5) then v41=nil;function v41(v74,v75,v76)local v77=v74[1];local v78=v74[2];local v79=v74[3];return function(...)local v80=v77;local v81=v78;local v82=v79;local v83=v39;local v84=1;local v85= -(1271 -(226 + 1044));local v86={};local v87={...};local v88=v20("#",...) -1 ;local v89={};local v90={};for v99=0,v88 do if (v99>=v82) then v86[v99-v82 ]=v87[v99 + 1 ];else v90[v99]=v87[v99 + 1 ];end end local v91=(v88-v82) + 1 ;local v92;local v93;while true do local v100=0;while true do if (v100==1) then if (v93<=38) then if (v93<=(78 -60)) then if (v93<=8) then if (v93<=(120 -(32 + 85))) then if (v93<=(1 + 0)) then if (v93==0) then v90[v92[2]]=v92[3] + v90[v92[4]] ;else v90[v92[2]][v90[v92[3]]]=v92[4];end elseif (v93>2) then v90[v92[2]][v92[3]]=v90[v92[4]];elseif  not v90[v92[1 + 1 ]] then v84=v84 + 1 ;else v84=v92[3];end elseif (v93<=5) then if (v93==4) then if v90[v92[2]] then v84=v84 + 1 ;else v84=v92[3];end else local v140=0;local v141;local v142;while true do if (0==v140) then v141=v92[2];v142=v90[v141];v140=1;end if (v140==1) then for v346=v141 + 1 ,v85 do v15(v142,v90[v346]);end break;end end end elseif (v93<=6) then v90[v92[959 -(892 + 65) ]][v90[v92[3]]]=v90[v92[4]];elseif (v93==7) then local v259=v92[4 -2 ];v90[v259](v90[v259 + (1 -0) ]);else v90[v92[2]]=v76[v92[3]];end elseif (v93<=13) then if (v93<=(18 -8)) then if (v93>9) then local v145=0;local v146;while true do if (v145==0) then v146=v92[2];v90[v146](v21(v90,v146 + 1 ,v85));break;end end else local v147=v92[2];local v148,v149=v83(v90[v147](v21(v90,v147 + 1 ,v92[3])));v85=(v149 + v147) -1 ;local v150=0;for v226=v147,v85 do local v227=0;while true do if (v227==0) then v150=v150 + 1 ;v90[v226]=v148[v150];break;end end end end elseif (v93<=11) then v90[v92[352 -(87 + 263) ]]=v92[3];elseif (v93>12) then v90[v92[2]]= #v90[v92[3]];elseif v90[v92[2]] then v84=v84 + 1 ;else v84=v92[183 -(67 + 113) ];end elseif (v93<=15) then if (v93>14) then local v153=v92[2];do return v21(v90,v153,v85);end else v90[v92[2]]=v75[v92[3 + 0 ]];end elseif (v93<=16) then v84=v92[3];elseif (v93==17) then v90[v92[2]]=v90[v92[7 -4 ]];else v90[v92[2]]={};end elseif (v93<=28) then if (v93<=23) then if (v93<=20) then if (v93==19) then v90[v92[2 + 0 ]]=v90[v92[3]][v92[4]];else v84=v92[11 -8 ];end elseif (v93<=21) then v90[v92[954 -(802 + 150) ]][v90[v92[7 -4 ]]]=v90[v92[4]];elseif (v93==22) then local v266=0;local v267;local v268;local v269;while true do if (v266==1) then v269=v90[v267 + 2 ];if (v269>0) then if (v268>v90[v267 + (1 -0) ]) then v84=v92[3];else v90[v267 + 3 ]=v268;end elseif (v268<v90[v267 + 1 ]) then v84=v92[3];else v90[v267 + 3 ]=v268;end break;end if (v266==0) then v267=v92[2];v268=v90[v267];v266=1;end end else v90[v92[2]][v92[3]]=v92[4];end elseif (v93<=25) then if (v93>24) then v90[v92[2 + 0 ]][v92[3]]=v90[v92[4]];else local v164=v92[2];v90[v164](v21(v90,v164 + 1 ,v92[3]));end elseif (v93<=26) then do return v90[v92[2]]();end elseif (v93==27) then v90[v92[2]]=v92[3];else local v274=v92[2];v90[v274]=v90[v274](v21(v90,v274 + (998 -(915 + 82)) ,v85));end elseif (v93<=(93 -60)) then if (v93<=30) then if (v93>(17 + 12)) then local v165=0;local v166;local v167;local v168;local v169;while true do if (v165==0) then v166=v92[2];v167,v168=v83(v90[v166](v21(v90,v166 + (1 -0) ,v85)));v165=1;end if (1==v165) then v85=(v168 + v166) -1 ;v169=0;v165=2;end if (v165==2) then for v350=v166,v85 do local v351=0;while true do if (v351==0) then v169=v169 + 1 ;v90[v350]=v167[v169];break;end end end break;end end else local v170=0;local v171;while true do if (v170==0) then v171=v92[2];v90[v171]=v90[v171](v21(v90,v171 + 1 ,v85));break;end end end elseif (v93<=31) then v90[v92[2]][v90[v92[3]]]=v92[1191 -(1069 + 118) ];elseif (v93>32) then local v276=0;local v277;local v278;local v279;while true do if (v276==0) then v277=v92[2];v278=v90[v277 + 2 ];v276=1;end if (v276==2) then if (v278>(0 -0)) then if (v279<=v90[v277 + 1 ]) then local v405=0;while true do if (v405==0) then v84=v92[6 -3 ];v90[v277 + 3 ]=v279;break;end end end elseif (v279>=v90[v277 + 1 ]) then v84=v92[3];v90[v277 + 3 ]=v279;end break;end if (v276==1) then v279=v90[v277] + v278 ;v90[v277]=v279;v276=2;end end else local v280=v92[2];local v281,v282=v83(v90[v280](v90[v280 + 1 ]));v85=(v282 + v280) -1 ;local v283=0;for v324=v280,v85 do local v325=0;while true do if (v325==0) then v283=v283 + 1 ;v90[v324]=v281[v283];break;end end end end elseif (v93<=(7 + 28)) then if (v93==(59 -25)) then do return v90[v92[2]]();end else local v174=v92[2];v90[v174]=v90[v174](v21(v90,v174 + 1 ,v92[3]));end elseif (v93<=36) then local v176=v92[2];local v177,v178=v83(v90[v176](v21(v90,v176 + 1 + 0 ,v92[3])));v85=(v178 + v176) -1 ;local v179=0;for v228=v176,v85 do v179=v179 + 1 ;v90[v228]=v177[v179];end elseif (v93>37) then local v284=0;local v285;while true do if (v284==0) then v285=v92[2];v90[v285]=v90[v285]();break;end end else local v286=0;local v287;while true do if (v286==0) then v287=v92[2];v90[v287]=v90[v287](v21(v90,v287 + 1 ,v92[3]));break;end end end elseif (v93<=57) then if (v93<=(838 -(368 + 423))) then if (v93<=42) then if (v93<=40) then if (v93==(122 -83)) then local v180=0;local v181;local v182;local v183;local v184;while true do if (v180==1) then v85=(v183 + v181) -1 ;v184=0;v180=2;end if (2==v180) then for v352=v181,v85 do local v353=0;while true do if (v353==0) then v184=v184 + 1 ;v90[v352]=v182[v184];break;end end end break;end if (v180==0) then v181=v92[2];v182,v183=v83(v90[v181](v21(v90,v181 + 1 ,v85)));v180=1;end end else local v185=v81[v92[21 -(10 + 8) ]];local v186;local v187={};v186=v18({},{[v7("\116\248\94\16\175\78\223","\203\43\167\55\126")]=function(v231,v232)local v233=0;local v234;while true do if (v233==0) then v234=v187[v232];return v234[1][v234[2]];end end end,[v7("\154\149\45\27\4\13\201\85\160\178","\49\197\202\67\126\115\100\167")]=function(v235,v236,v237)local v238=v187[v236];v238[1][v238[2]]=v237;end});for v240=1,v92[4] do local v241=0;local v242;while true do if (v241==0) then v84=v84 + 1 ;v242=v80[v84];v241=1;end if (v241==1) then if (v242[1]==17) then v187[v240-1 ]={v90,v242[445 -(416 + 26) ]};else v187[v240-1 ]={v75,v242[3]};end v89[ #v89 + 1 ]=v187;break;end end end v90[v92[2]]=v41(v185,v186,v76);end elseif (v93>41) then local v189=0;local v190;local v191;local v192;while true do if (v189==0) then v190=v92[6 -4 ];v191=v90[v190];v189=1;end if (v189==1) then v192=v90[v190 + 2 ];if (v192>0) then if (v191>v90[v190 + 1 ]) then v84=v92[3];else v90[v190 + 2 + 1 ]=v191;end elseif (v191<v90[v190 + 1 ]) then v84=v92[3];else v90[v190 + (4 -1) ]=v191;end break;end end else v90[v92[2]]=v90[v92[3]]%v92[4] ;end elseif (v93<=44) then if (v93>(481 -(145 + 293))) then if (v90[v92[2]]==v92[4]) then v84=v84 + (431 -(44 + 386)) ;else v84=v92[3];end else local v194=0;local v195;while true do if (v194==0) then v195=v92[2];v90[v195](v21(v90,v195 + 1 ,v92[3]));break;end end end elseif (v93<=45) then do return;end elseif (v93>46) then v90[v92[2]]=v75[v92[3]];else v90[v92[1488 -(998 + 488) ]]=v90[v92[3]] + v92[2 + 2 ] ;end elseif (v93<=52) then if (v93<=49) then if (v93>48) then v90[v92[2]]=v90[v92[3]]%v92[4] ;else v90[v92[2 + 0 ]]=v90[v92[3]];end elseif (v93<=50) then for v243=v92[2],v92[3] do v90[v243]=nil;end elseif (v93==51) then local v292=v92[2];local v293=v90[v292 + 2 ];local v294=v90[v292] + v293 ;v90[v292]=v294;if (v293>0) then if (v294<=v90[v292 + 1 ]) then v84=v92[3];v90[v292 + 3 ]=v294;end elseif (v294>=v90[v292 + 1 ]) then local v386=0;while true do if (0==v386) then v84=v92[3];v90[v292 + 3 ]=v294;break;end end end else local v296=0;local v297;local v298;local v299;local v300;while true do if (v296==2) then for v387=v297,v85 do v300=v300 + 1 ;v90[v387]=v298[v300];end break;end if (v296==1) then v85=(v299 + v297) -1 ;v300=0;v296=2;end if (v296==0) then v297=v92[2];v298,v299=v83(v90[v297](v90[v297 + (773 -(201 + 571)) ]));v296=1;end end end elseif (v93<=54) then if (v93==53) then v90[v92[2]]=v76[v92[3]];else local v201=v81[v92[3]];local v202;local v203={};v202=v18({},{[v7("\8\100\214\39\132\83\70","\62\87\59\191\73\224\54")]=function(v245,v246)local v247=0;local v248;while true do if (v247==0) then v248=v203[v246];return v248[1][v248[1140 -(116 + 1022) ]];end end end,[v7("\216\61\244\204\240\11\244\205\226\26","\169\135\98\154")]=function(v249,v250,v251)local v252=v203[v250];v252[1][v252[2]]=v251;end});for v254=1,v92[4] do local v255=0;local v256;while true do if (v255==0) then v84=v84 + 1 ;v256=v80[v84];v255=1;end if (v255==1) then if (v256[1]==17) then v203[v254-1 ]={v90,v256[3]};else v203[v254-1 ]={v75,v256[3]};end v89[ #v89 + 1 ]=v203;break;end end end v90[v92[2]]=v41(v201,v202,v76);end elseif (v93<=55) then local v205=0;local v206;while true do if (0==v205) then v206=v92[2];v90[v206]=v90[v206](v90[v206 + 1 + 0 ]);break;end end elseif (v93>56) then local v301=0;local v302;local v303;while true do if (v301==1) then for v392=v302 + 1 ,v85 do v15(v303,v90[v392]);end break;end if (v301==0) then v302=v92[2];v303=v90[v302];v301=1;end end else local v304=v92[2];do return v90[v304](v21(v90,v304 + 1 ,v92[3]));end end elseif (v93<=67) then if (v93<=62) then if (v93<=59) then if (v93==58) then if (v90[v92[2]]==v92[4]) then v84=v84 + 1 ;else v84=v92[3];end else local v207=0;local v208;while true do if (v207==0) then v208=v92[2];v90[v208](v21(v90,v208 + 1 ,v85));break;end end end elseif (v93<=60) then local v209=0;local v210;while true do if (v209==0) then v210=v92[2];v90[v210]=v90[v210](v90[v210 + 1 ]);break;end end elseif (v93==61) then v90[v92[7 -5 ]]= #v90[v92[3]];else v90[v92[2]]=v90[v92[3]] + v92[4] ;end elseif (v93<=(227 -163)) then if (v93==63) then local v211=v92[2];v90[v211]=v90[v211]();else v90[v92[2]]=v90[v92[862 -(814 + 45) ]]%v90[v92[9 -5 ]] ;end elseif (v93<=(4 + 61)) then if  not v90[v92[2]] then v84=v84 + 1 + 0 ;else v84=v92[3];end elseif (v93>66) then v90[v92[2]][v92[3]]=v92[4];else local v311=0;local v312;local v313;while true do if (v311==1) then v90[v312 + 1 ]=v313;v90[v312]=v313[v92[4]];break;end if (v311==0) then v312=v92[2];v313=v90[v92[3]];v311=1;end end end elseif (v93<=72) then if (v93<=69) then if (v93>68) then v90[v92[2]]=v90[v92[3]][v92[4]];else local v216=0;local v217;local v218;while true do if (v216==1) then v90[v217 + 1 ]=v218;v90[v217]=v218[v92[4]];break;end if (v216==0) then v217=v92[2];v218=v90[v92[3]];v216=1;end end end elseif (v93<=70) then local v219=0;local v220;while true do if (v219==0) then v220=v92[2];do return v90[v220](v21(v90,v220 + 1 ,v92[3]));end break;end end elseif (v93==(956 -(261 + 624))) then v90[v92[2]]={};else v90[v92[3 -1 ]]=v90[v92[3]]%v90[v92[4]] ;end elseif (v93<=74) then if (v93>(1153 -(1020 + 60))) then do return;end else local v221=0;local v222;while true do if (v221==0) then v222=v92[2];do return v21(v90,v222,v85);end break;end end end elseif (v93<=75) then local v223=0;local v224;while true do if (v223==0) then v224=v92[1425 -(630 + 793) ];v90[v224](v90[v224 + 1 ]);break;end end elseif (v93>76) then v90[v92[2]]=v92[3] + v90[v92[4]] ;else for v344=v92[6 -4 ],v92[3] do v90[v344]=nil;end end v84=v84 + 1 ;break;end if (v100==0) then v92=v80[v84];v93=v92[1];v100=1;end end end end;end return v41(v40(),{},v28)(...);end end end vv17(),...);
-- ⚠️ WARNING: integrity protected!
--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.9.14) ~  Much Love, Ferib 

]]--
